{"version":3,"sources":["components/sprites.scss","components/sprite-vars.scss","components/typography.scss"],"names":[],"mappings":"AAAA,QACC,oBAAsB,CAGhB,cCgEL,oDALA,4BAVA,YAIA,aDnDD,sDAAA,AAA8C,6CAAA,CAGxC,YC2DL,oDALA,+BAVA,YAIA,aD9CD,oDAAA,AAA4C,2CAAA,CAG7C,0BACC,GACC,6CAAA,AAAkC,oCAAA,CAEnC,KACC,+CAAA,AAAoC,sCAAA,CAAA,CALtC,AEdA,kBFeC,GACC,6CAAA,AAAkC,oCAAA,CAEnC,KACC,+CAAA,AAAoC,sCAAA,CAAA,CEnBtC,KACC,kCACC,kCAAoC,CAFhC","file":"styles.css","sourcesContent":[".sprite {\n\tdisplay: inline-block;\n}\n\n.sprite.green {\n\t@include sprite($sprite-green);\n\tanimation: rotate 4s infinite linear alternate;\n}\n\n.sprite.red {\n\t@include sprite($sprite-red);\n\tanimation: rotate 4s infinite ease alternate;\n}\n\n@keyframes rotate {\n\t0% {\n\t\ttransform: rotate(0deg) translateZ(0);\n\t}\n\t100% {\n\t\ttransform: rotate(360deg) translateZ(0);\n\t}\n}","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$sprite-green-name: 'sprite-green';\n$sprite-green-x: 0px;\n$sprite-green-y: 0px;\n$sprite-green-offset-x: 0px;\n$sprite-green-offset-y: 0px;\n$sprite-green-width: 200px;\n$sprite-green-height: 200px;\n$sprite-green-total-width: 400px;\n$sprite-green-total-height: 200px;\n$sprite-green-image: '../images/sprites/sprites.png';\n$sprite-green: (0px, 0px, 0px, 0px, 200px, 200px, 400px, 200px, '../images/sprites/sprites.png', 'sprite-green', );\n$sprite-red-name: 'sprite-red';\n$sprite-red-x: 200px;\n$sprite-red-y: 0px;\n$sprite-red-offset-x: -200px;\n$sprite-red-offset-y: 0px;\n$sprite-red-width: 200px;\n$sprite-red-height: 200px;\n$sprite-red-total-width: 400px;\n$sprite-red-total-height: 200px;\n$sprite-red-image: '../images/sprites/sprites.png';\n$sprite-red: (200px, 0px, -200px, 0px, 200px, 200px, 400px, 200px, '../images/sprites/sprites.png', 'sprite-red', );\n$spritesheet-width: 400px;\n$spritesheet-height: 200px;\n$spritesheet-image: '../images/sprites/sprites.png';\n$spritesheet-sprites: ($sprite-green, $sprite-red, );\n$spritesheet: (400px, 200px, '../images/sprites/sprites.png', $spritesheet-sprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n","body {\n\tfont-family: helvetica, sans-serif;\n  -webkit-font-smoothing: antialiased;\n}"],"sourceRoot":"/source/"}